(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[464],{354:function(s,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quickstart/cli",function(){return n(9637)}])},9637:function(s,e,n){"use strict";n.r(e),n.d(e,{__toc:function(){return c}});var l=n(2676),i=n(7217),r=n(6151),o=n(20);let c=[{depth:2,value:"安装",id:"安装"},{depth:2,value:"配置 CLI",id:"配置-cli"},{depth:3,value:"指令",id:"指令"},{depth:2,value:"创建 swpp 配置文件",id:"创建-swpp-配置文件"}];function t(s){let e=Object.assign({h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code",span:"span",h3:"h3",ul:"ul",li:"li",strong:"strong",hr:"hr"},(0,r.a)(),s.components);return o.mQ||a("Tabs",!1),o.mQ.Tab||a("Tabs.Tab",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h1,{children:"通过 CLI 指令构建"}),"\n",(0,l.jsx)(e.p,{children:"  如果您使用的平台不是 NodeJs 或框架没有专门支持 swpp 的包，那么可以使用 CLI 指令构建 swpp 内容，但是通过 CLI 构建 swpp 相比于使用专门适配框架的软件包要麻烦一些，需要运行指令才能在本地预览 Service Worker。"}),"\n",(0,l.jsx)(e.h2,{id:"安装",children:"安装"}),"\n",(0,l.jsx)(e.p,{children:"  运行下面指令即可完成安装："}),"\n",(0,l.jsxs)(o.mQ,{items:["局部安装","全局安装"],children:[(0,l.jsx)(o.mQ.Tab,{children:(0,l.jsx)(e.pre,{"data-language":"bash","data-theme":"default",children:(0,l.jsx)(e.code,{"data-language":"bash","data-theme":"default",children:(0,l.jsxs)(e.span,{className:"line",children:[(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-function)"},children:"npm"}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-string)"},children:"install"}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-string)"},children:"swpp-backends@3"})]})})})}),(0,l.jsx)(o.mQ.Tab,{children:(0,l.jsx)(e.pre,{"data-language":"bash","data-theme":"default",children:(0,l.jsx)(e.code,{"data-language":"bash","data-theme":"default",children:(0,l.jsxs)(e.span,{className:"line",children:[(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-function)"},children:"npm"}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-string)"},children:"install"}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-string)"},children:"swpp-backends@3"}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-string)"},children:"-g"})]})})})})]}),"\n",(0,l.jsx)(e.h2,{id:"配置-cli",children:"配置 CLI"}),"\n",(0,l.jsxs)(e.p,{children:["  您需要在项目的某一个位置创建 CLI 的配置文件，默认路径是：",(0,l.jsx)(e.code,{children:"./swpp.cli.json"}),"（路径相对于运行指令的位置），您可以通过指令修改该路径。然后在其中填写如下内容："]}),"\n",(0,l.jsx)(e.pre,{"data-language":"json","data-theme":"default",children:(0,l.jsxs)(e.code,{"data-language":"json","data-theme":"default",children:[(0,l.jsx)(e.span,{className:"line",children:(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"{"})}),"\n",(0,l.jsxs)(e.span,{className:"line",children:[(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-keyword)"},children:'"webRoot"'}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"这里填发布目录（就是存放最终生成的 html、css 等文件的目录）的绝对或相对路径"'}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,l.jsxs)(e.span,{className:"line",children:[(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-keyword)"},children:'"configFiles"'}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:" ["})]}),"\n",(0,l.jsxs)(e.span,{className:"line",children:[(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"这里填 js/ts 配置文件的相对路径（绝对路径也可以，但是推荐相对路径）"'}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,l.jsxs)(e.span,{className:"line",children:[(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"当填写多项时，越早出现的配置项优先级越高"'})]}),"\n",(0,l.jsxs)(e.span,{className:"line",children:[(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"  ]"}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,l.jsxs)(e.span,{className:"line",children:[(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-keyword)"},children:'"domJsPath"'}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"dom js 要生成到的路径，相对于 webRoot，必须以 `/` 开头，以 `.js` 结尾"'}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,l.jsxs)(e.span,{className:"line",children:[(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-keyword)"},children:'"excludes"'}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:" ["})]}),"\n",(0,l.jsxs)(e.span,{className:"line",children:[(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,l.jsx)(e.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"如果部分 html 文件不需要在其中插入 <script>，那么在这里可以填写正则表达式忽略这些文件，区分大小写"'})]}),"\n",(0,l.jsx)(e.span,{className:"line",children:(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"  ]"})}),"\n",(0,l.jsx)(e.span,{className:"line",children:(0,l.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,l.jsxs)(e.p,{children:["  其中 ",(0,l.jsx)(e.code,{children:"webRoot"})," 与 ",(0,l.jsx)(e.code,{children:"configFiles"})," 为必填项，其余两项可选。"]}),"\n",(0,l.jsx)(e.h3,{id:"指令",children:"指令"}),"\n",(0,l.jsxs)(e.p,{children:["  您可以运行 ",(0,l.jsx)(e.code,{children:"swpp -h"})," 指令获取帮助信息，下面是一些常用的指令："]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"swpp -v"}),": 查看版本"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"swpp -b"}),": 构建 swpp"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"创建-swpp-配置文件",children:"创建 swpp 配置文件"}),"\n",(0,l.jsxs)(e.p,{children:["  在项目根目录下创建 ",(0,l.jsx)(e.code,{children:"swpp.config.ts"})," 文件（您可以通过 ",(0,l.jsx)(e.code,{children:"json"})," 配置修改配置文件所在的路径）。"]}),"\n",(0,l.jsxs)(e.p,{children:["  CLI 不会自动为您填写配置文件中的 ",(0,l.jsx)(e.code,{children:"DOMAIN_HOST"})," 字段，所以您",(0,l.jsx)(e.strong,{children:"需要"}),"手动填写该字段。"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.p,{children:"  到这里您就完成了 swpp 安装的所有流程，但是此时您尚未启用 swpp 的任何功能，所以并不能给您的网站带来任何改善，继续阅读文档以了解 swpp 的配置项。"})]})}function a(s,e){throw Error("Expected "+(e?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}e.default=(0,i.j)({MDXContent:function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.a)(),s.components);return e?(0,l.jsx)(e,{...s,children:(0,l.jsx)(t,{...s})}):t(s)},pageOpts:{filePath:"pages/quickstart/cli.mdx",route:"/quickstart/cli",timestamp:172465812e4,title:"通过 CLI 指令构建",headings:c},pageNextRoute:"/quickstart/cli"})}},function(s){s.O(0,[217,888,774,179],function(){return s(s.s=354)}),_N_E=s.O()}]);